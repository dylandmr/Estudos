// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelagemInicial;

namespace ModelagemInicial.Migrations
{
    [DbContext(typeof(TMContext))]
    partial class LojaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModelagemInicial.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ModelagemInicial.CategoriaPeriferico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("CategoriaPeriferico");
                });

            modelBuilder.Entity("ModelagemInicial.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("EnderecoId");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Clientes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Cliente");
                });

            modelBuilder.Entity("ModelagemInicial.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<int>("Cep");

                    b.Property<int>("Numero");

                    b.Property<string>("Referencia");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ModelagemInicial.FormaDePagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<DateTime>("Previsao");

                    b.HasKey("Id");

                    b.ToTable("FormaDePagamento");
                });

            modelBuilder.Entity("ModelagemInicial.MarcaCartucho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("MarcaCartucho");
                });

            modelBuilder.Entity("ModelagemInicial.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Estoque");

                    b.Property<double>("Preco");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Produto");
                });

            modelBuilder.Entity("ModelagemInicial.TipoCartucho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("TipoCartucho");
                });

            modelBuilder.Entity("ModelagemInicial.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("ImagemPerfil");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("ModelagemInicial.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("Data");

                    b.Property<int?>("FormaDePagamentoId");

                    b.Property<int?>("FuncionarioId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FormaDePagamentoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("ModelagemInicial.VendaProduto", b =>
                {
                    b.Property<int>("VendaId");

                    b.Property<int>("ProdutoId");

                    b.HasKey("VendaId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("VendaProduto");
                });

            modelBuilder.Entity("ModelagemInicial.PessoaFisica", b =>
                {
                    b.HasBaseType("ModelagemInicial.Cliente");

                    b.Property<string>("Cpf");

                    b.Property<string>("Nome");

                    b.ToTable("PessoaFisica");

                    b.HasDiscriminator().HasValue("PessoaFisica");
                });

            modelBuilder.Entity("ModelagemInicial.PessoaJuridica", b =>
                {
                    b.HasBaseType("ModelagemInicial.Cliente");

                    b.Property<int>("Cnpj");

                    b.Property<string>("RazaoSocial");

                    b.ToTable("PessoaJuridica");

                    b.HasDiscriminator().HasValue("PessoaJuridica");
                });

            modelBuilder.Entity("ModelagemInicial.Cartucho", b =>
                {
                    b.HasBaseType("ModelagemInicial.Produto");

                    b.Property<int?>("MarcaCartuchoId");

                    b.Property<string>("Modelo");

                    b.Property<int?>("TipoCartuchoId");

                    b.HasIndex("MarcaCartuchoId");

                    b.HasIndex("TipoCartuchoId");

                    b.ToTable("Cartucho");

                    b.HasDiscriminator().HasValue("Cartucho");
                });

            modelBuilder.Entity("ModelagemInicial.Periferico", b =>
                {
                    b.HasBaseType("ModelagemInicial.Produto");

                    b.Property<int?>("CategoriaPerifericoId");

                    b.Property<string>("Nome");

                    b.HasIndex("CategoriaPerifericoId");

                    b.ToTable("Periferico");

                    b.HasDiscriminator().HasValue("Periferico");
                });

            modelBuilder.Entity("ModelagemInicial.Administrador", b =>
                {
                    b.HasBaseType("ModelagemInicial.Usuario");


                    b.ToTable("Administrador");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("ModelagemInicial.Funcionario", b =>
                {
                    b.HasBaseType("ModelagemInicial.Usuario");


                    b.ToTable("Funcionario");

                    b.HasDiscriminator().HasValue("Funcionario");
                });

            modelBuilder.Entity("ModelagemInicial.Cliente", b =>
                {
                    b.HasOne("ModelagemInicial.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("ModelagemInicial.Produto", b =>
                {
                    b.HasOne("ModelagemInicial.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("ModelagemInicial.Venda", b =>
                {
                    b.HasOne("ModelagemInicial.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("ModelagemInicial.FormaDePagamento", "FormaDePagamento")
                        .WithMany()
                        .HasForeignKey("FormaDePagamentoId");

                    b.HasOne("ModelagemInicial.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("ModelagemInicial.VendaProduto", b =>
                {
                    b.HasOne("ModelagemInicial.Produto", "Produto")
                        .WithMany("Vendas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ModelagemInicial.Venda", "Venda")
                        .WithMany("Produtos")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ModelagemInicial.Cartucho", b =>
                {
                    b.HasOne("ModelagemInicial.MarcaCartucho", "MarcaCartucho")
                        .WithMany()
                        .HasForeignKey("MarcaCartuchoId");

                    b.HasOne("ModelagemInicial.TipoCartucho", "TipoCartucho")
                        .WithMany()
                        .HasForeignKey("TipoCartuchoId");
                });

            modelBuilder.Entity("ModelagemInicial.Periferico", b =>
                {
                    b.HasOne("ModelagemInicial.CategoriaPeriferico", "CategoriaPeriferico")
                        .WithMany()
                        .HasForeignKey("CategoriaPerifericoId");
                });
#pragma warning restore 612, 618
        }
    }
}
